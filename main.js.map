{"version":3,"sources":["./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/composer-details/composer-details.component.ts","./src/app/composer-details/composer-details.component.html","./src/app/composer.service.ts","./src/app/composer-list/composer-list.component.ts","./src/app/composer-list/composer-list.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/*\n============================================\n; Title: Assignment 4.4 – Async Pipe\n; Author: Dan Ross\n; Date: 23 Jan 2021\n; Modified By: Dan Ross\n; Description: This is the about component\n;===========================================\n*/\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- /*\n============================================\n; Title: Assignment 4.4 – Async Pipe\n; Author: Dan Ross\n; Date: 23 Jan 2021\n; Modified By: Dan Ross\n; Description: This is the 'about' HTML display page.\n;===========================================\n*/ -->\n<!-- Start the composer container -->\n<div class=\"composer-container\">\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <h3 class=\"align-center\">George Frideric Handel</h3>\n    </div>\n  </div>\n\n  <hr />\n\n  <div class=\"row about-composer\">\n    <!-- This is the left column.  -->\n    <div class=\"col-sm-3\">\n      <img\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fa/George_Frideric_Handel_by_Balthasar_Denner.jpg/198px-George_Frideric_Handel_by_Balthasar_Denner.jpg\"\n      />\n    </div>\n    <!-- This is the right column.  -->\n    <div class=\"col-sm-9\">\n      <p>\n        George Frideric Handel (February 32, 1685 – April 14th 1759) was a\n        Baroque composer who became well known for his operas, oratorios, and\n        anthems. Handle was trained in Halle and worked in Hamburg and Italy as\n        a composer before finally settling in London in 1712. He spent the bulk\n        of his career there and eventually became a naturalized citizen of\n        Britain in 1727. He was greatly influenced both by the middle-German\n        polyphonic choral tradition and by other composers of the Italian\n        Baroque.\n        <em class=\"apa-reference\"\n          ><a\n            href=\"https://en.wikipedia.org/wiki/George_Frideric_Handel\"\n            target=\"_blank\"\n            >Source</a\n          ></em>\n      </p>\n    </div>\n  </div>\n</div>\n<!-- End the composer container -->\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/*\n============================================\n; Title: Assignment 4.4 – Async Pipe\n; Author: Dan Ross\n; Date: 23 Jan 2021\n; Modified By: Dan Ross\n; Description: This is the root app component.\n;===========================================\n*/\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n//This is the title for our App.\nexport class AppComponent {\n  title = 'Exercise 4.3 - Handling Events with Observables ';\n}\n","<!-- /*\n============================================\n; Title: Assignment 4.4 – Async Pipe \n; Author: Dan Ross\n; Date: 23 Jan 2021\n; Modified By: Dan Ross\n; Description: This file contains all the HTML code used by the component to display itself.\n;===========================================\n*/ -->\n<!-- Start Navigation here. -->\n<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item active\">\n      <a class=\"nav-link\" routerLink=\"/composer-list\">Composer List</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"/about\">About</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"/contact\">Contact Us</a>\n    </li>\n  </ul>\n</nav>\n<!-- End Navigation here. -->\n<!-- Start router outlet container here -->\n<div role=\"main\" class=\"container\">\n  <br />\n  <br />\n  <h2>Assignment 4.4 - Async Pipe</h2>\n  <br />\n  <br />\n  <!-- The Router Outlet shows the HTML code for the active component -->\n  <router-outlet></router-outlet>\n</div>\n<!-- End router outlet container here -->\n","/*\n============================================\n; Title: Assignment 4.4 – Async Pipe\n; Author: Dan Ross\n; Date: 23 Jan 2021\n; Modified By: Dan Ross\n; Description: This is the root app module.\n;===========================================\n*/\n//These are our import statements.\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ComposerListComponent } from './composer-list/composer-list.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { AboutComponent } from './about/about.component';\nimport { ComposerDetailsComponent } from './composer-details/composer-details.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ComposerListComponent,\n    ContactComponent,\n    AboutComponent,\n    ComposerDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/*\n============================================\n; Title: Assignment 4.4 – Async Pipe\n; Author: Dan Ross\n; Date: 23 Jan 2021\n; Modified By: Dan Ross\n; Description: This is the contact component\n;===========================================\n*/\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- /*\n============================================\n; Title: Assignment 4.4 – Async Pipe\n; Author: Dan Ross\n; Date: 23 Jan 2021\n; Modified By: Dan Ross\n; Description: This is the 'contact' HTML display page.\n;===========================================\n*/ -->\n<!-- Start contact container here. -->\n<div class=\"contact-container\">\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <h3 class=\"text-center\">Welcome to the Contact Us page</h3>\n    </div>\n  </div>\n\n  <br /><br />\n  <div class=\"row text-center\">\n    <!-- Start right column for address here.  -->\n    <div class=\"col-sm-6\">\n      <div class=\"row location\">\n        <div class=\"col-sm-12\">\n          <h1><i class=\"bi bi-map-fill\"></i></h1>\n        </div>\n      </div>\n\n      <div class=\"row location\">\n        <div class=\"col-sm-12\">\n          <ul class=\"list-group\">\n            <li class=\"list-group-item border-0\">1234 Somewhere St</li>\n            <li class=\"list-group-item border-0\">Ames, Iowa 50010</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n   <!-- End right column for address here.  -->\n\n    <!-- Start left column for phone numbers here.  -->\n    <div class=\"col-sm-6\">\n      <div class=\"row location\">\n        <div class=\"col-sm-12\">\n          <h1><i class=\"bi bi-telephone-fill\"></i></h1>\n        </div>\n      </div>\n\n      <div class=\"row location\">\n        <div class=\"col-sm-12\">\n          <ul class=\"list-group\">\n            <li class=\"list-group-item border-0\">Direct: 666-666-6666</li>\n            <li class=\"list-group-item border-0\">Toll-free: 1-888-888-8888</li>\n            <li class=\"list-group-item border-0\">Fax: 444-444-4444</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <!-- End left column for phone numbers here.  -->\n\n  </div>\n</div>\n","/*\n============================================\n; Title: Assignment 4.4 – Async Pipe\n; Author: Dan Ross\n; Date: 23 Jan 2021\n; Modified By: Dan Ross\n; Description: This is the composer-details component\n;===========================================\n*/\n//These are the import statements.\nimport { Component, OnInit } from '@angular/core';\nimport { IComposer } from '../composer.interface';\nimport { ComposerService } from '../composer.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-composer-details',\n  templateUrl: './composer-details.component.html',\n  styleUrls: ['./composer-details.component.css']\n})\nexport class ComposerDetailsComponent implements OnInit {\n  composerId: number;\n  composer: IComposer;\n\n  //Here we imported over ActivatedRoute and use that to be able to access the value inside the path (composerId) of our router file.\n  constructor(private route: ActivatedRoute, private composerService: ComposerService) {\n    this.composerId = parseInt(this.route.snapshot.paramMap.get('composerId'), 10);\n\n    //This will check if the composer ID has a value.\n    if (this.composerId){\n      //We're using dependency injection to control the creation of the class.\n      this.composer = this.composerService.getComposer(this.composerId);\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- /*\n============================================\n; Title: Assignment 4.4 – Async Pipe\n; Author: Dan Ross\n; Date: 23 Jan 2021\n; Modified By: Dan Ross\n; Description: This is the composer-details HTML display page.\n;===========================================\n*/ -->\n\n<div class=\"row\">\n\n  <div class=\"col-sm-12\">\n    <!-- This will display the composer details based on the ID passed in the route.  -->\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\">Composer ID: {{ composer.composerId }}</li>\n      <li class=\"list-group-item\">Full Name: {{ composer.fullName }}</li>\n      <li class=\"list-group-item\">Genre: {{ composer.genre }}</li>\n    </ul>\n    <br>\n    <!-- This will navigate back to the composer list master page. -->\n    <a routerLink=\"/composer-list\" class= \"float-right\">Return to Composers</a>\n  </div>\n</div>\n","/*\n============================================\n; Title: Assignment 4.4 – Async Pipe\n; Author: Dan Ross\n; Date: 23 Jan 2021\n; Modified By: Dan Ross\n; Description: This is the composer service\n;===========================================\n*/\n//These are our import files\nimport { Injectable } from '@angular/core';\nimport { IComposer } from './composer.interface';\nimport { Observable } from 'rxjs';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n//This identifies the class as being injectable.\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComposerService {\n  composers: Array<IComposer>;\n  //Here are 5 composer objects.\n  constructor() {\n    this.composers = [\n      {\n        composerId: 100, fullName: \"Wolfgang Amadeus Mozart\", genre: \"Classical\"\n      },\n      {\n        composerId: 101, fullName: \"Johann Sebastian Bach\", genre: \"Classical\"\n      },\n      {\n        composerId: 102, fullName: \"Ludwig van Beethoven\", genre: \"Classical\"\n      },\n      {\n        composerId: 103, fullName: \"Frédéric Chopin\", genre: \"Classical\"\n      },\n      {\n        composerId: 104, fullName: \"George Frideric Handel\", genre: \"Baroque\"\n      }\n    ]\n  }\n  //This returns the composer list.\n  getComposers(): Observable<IComposer[]> {\n    //This returns an observable array.\n    return of(this.composers);\n  }\n  //This will loop over the composer list. If the composer ID equals the passed in ID, then return that composer.\n  getComposer(composerId: number) {\n    for (let composer of this.composers) {\n      if (composer.composerId === composerId) {\n        return composer;\n      }\n    }\n  }\n\n  //Give us a new Observable array (map()) where the name parameter has characters in the composer.fullName.\n  filterComposers(name: string): Observable<IComposer[]> {\n    return of(this.composers).pipe(\n      map(composers =>\n        composers.filter(composer => composer.fullName.toLowerCase().indexOf(name) > -1)))\n\n  }\n}\n","/*\n============================================\n; Title: Assignment 4.4 – Async Pipe\n; Author: Dan Ross\n; Date: 23 Jan 2021\n; Modified By: Dan Ross\n; Description: This is the composer-list component\n;===========================================\n*/\n//These are the import statements.\nimport { Component, OnInit } from '@angular/core';\nimport { IComposer } from '../composer.interface';\nimport { ComposerService } from '../composer.service';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-composer-list',\n  templateUrl: './composer-list.component.html',\n  styleUrls: ['./composer-list.component.css']\n})\n\n// This is the ComposerListComponent class\nexport class ComposerListComponent implements OnInit {\n  composers: Observable<IComposer[]>;\n  txtSearchControl = new FormControl('');\n  //This creates an array with 5 composer objects\n  constructor(private composerService: ComposerService) {\n    //call composer service using dependency injection\n    this.composers = this.composerService.getComposers();\n    //Any time we enter text in the 'txtSearchControl' it will trigger the 'valueChanges' event and after 500ms we'll call the 'filterComposers' function.\n    this.txtSearchControl.valueChanges.pipe(debounceTime(500)).subscribe(val => this.filterComposers(val));\n\n\n   }\n\n  ngOnInit(): void {\n  }\n  //This calls to the composerService.filterComposers(name) function and assign the results to the composers variable \n  filterComposers(name: string) {\n    this.composers = this.composerService.filterComposers(name);\n  }\n\n}\n","<!-- /*\n============================================\n; Title: Assignment 4.4 – Async Pipe\n; Author: Dan Ross\n; Date: 23 Jan 2021\n; Modified By: Dan Ross\n; Description: This is the composer-list HTML display page.\n;===========================================\n*/ -->\n<div class=\"row\">\n  <div class=\"col-sm-12\">\n\n    <!-- This is our search field. It will filter the results of our table when we type in a name of a composer and only show the rows that match our query.  -->\n    <div class=\"textSearch\">\n      <input type=\"text\" id=\"txtSearch\" class=\"form-control\" placeholder=\"Search by name\" [formControl]=\"txtSearchControl\">\n    </div>\n\n    <!-- Start the composer table here -->\n    <table class=\"table table-bordered\">\n      <!-- Start the composer headers here -->\n      <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">Composer ID</th>\n          <th scope=\"col\">Full name</th>\n          <th scope=\"col\">Genre</th>\n        </tr>\n      </thead>\n      <!-- End the composer headers here -->\n      <!-- This will loop over the list of composers from the composer.class.ts -->\n      <tbody *ngFor=\"let composer of composers | async\">\n        <tr>\n          <td scope=\"row\">\n            <!-- This is how we'll navigate to composer details component based on ID -->\n            <a routerLink=\"/composer-details/{{ composer.composerId }}\">\n              {{ composer.composerId }}\n              <!-- This will display the composer ID. -->\n            </a>\n          </td>\n          <td scope=\"row\">{{ composer.fullName }}</td>\n          <!-- This will display the composers full name. -->\n          <td>{{ composer.genre }}</td>\n          <!-- This will display the composers genre. -->\n        </tr>\n      </tbody>\n    </table>\n    <!-- End the composer table here -->\n  </div>\n</div>\n","/*\n============================================\n; Title: Assignment 4.4 – Async Pipe\n; Author: Dan Ross\n; Date: 23 Jan 2021\n; Modified By: Dan Ross\n; Description: This is the routing module where we can set up our routes.\n;===========================================\n*/\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//These import statements load the components defined in our routes\nimport { AboutComponent } from './about/about.component';\nimport { ComposerDetailsComponent } from './composer-details/composer-details.component';\nimport { ComposerListComponent } from './composer-list/composer-list.component';\nimport { ContactComponent } from './contact/contact.component';\n\n//These are routes which will load the corresponding component based on the URL path.\nconst routes: Routes = [\n  {\n    //This is for the URL http://localhost:4200\n    path: '',\n    component: ComposerListComponent\n  },\n  {\n    //This is for the URL http://localhost:4200/composer-list\n    path: 'composer-list',\n    component: ComposerListComponent\n  },\n  {\n    //This is for the URL http://localhost:4200/composer-details/IDHERE where IDHERE is the ID of the composer\n    path: 'composer-details/:composerId',\n    component: ComposerDetailsComponent\n  },\n  {\n    //This is for the URL http://localhost:4200/about\n    path: 'about',\n    component: AboutComponent\n  },\n  {\n    //This is for the URL http://localhost:4200/contact\n    path: 'contact',\n    component: ContactComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}